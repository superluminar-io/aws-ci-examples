AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  GitHubOwner:
    Type: String
    Default: fielmann-ag
  RepositoryName:
    Type: String
    Default: nci_aws_service_catalog_products
  BranchName:
    Type: String
    Default: master
  TargetStackName:
    Type: String
    Default: targetStack

Resources:
  ArtifactStoreS3Location:
    Type: AWS::S3::Bucket
    Properties:
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 14
            Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          -  ServerSideEncryptionByDefault:
               SSEAlgorithm: AES256

  PipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: "{{resolve:secretsmanager:/path/to/github-token:SecretString}}"
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref Pipeline
      TargetAction: SourceAction
      Name: PipelineWebhook
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: true

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref RepositoryName
                Branch: !Ref BranchName
                OAuthToken: "{{resolve:secretsmanager:/path/to/github-token:SecretString}}"
                PollForSourceChanges: false
        - Name: TestTemplate
          Actions:
            - Name: RunCfnLint
              ActionTypeId:
                Category: Test
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ProjectName: !Sub "${AWS::StackName}_Lint-Cfn"
                
        - Name: DeployCloudFormationStack
          Actions:
            - Name: DeployCfnStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Ref TargetStackName
                TemplatePath: SourceOutput::cfn/template.yaml
                RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStoreS3Location

  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - cloudformation.amazonaws.comx
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
